---
- name: Restore backup for blunet-minecraft-vanilla
  hosts: manager
  remote_user: pi

  tasks:
    - name: Check for compute node context
      ansible.builtin.shell:
        cmd: if [[ -z $(docker context ls | awk '{print $1}' | grep "{{ deployment.node }}") ]]; then echo true; fi
      register: context_missingdocker

    - name: Create missing docker context
      ansible.builtin.shell:
        cmd: docker context create {{ deployment.node }} --description "{{ deployment.node }}" --docker "host=ssh://kevin@{{ deployment.node }}"
      when: context_missing.msg != ""

    - name: Use new context
      command: docker context use {{ deployment.node }}

    - name: Find minecraft image name
      ansible.builtin.shell:
        cmd: docker ps --format json | jq -r ".Names" | grep "{{ deployment.name }}_minecraft_spigot_vanilla"
      register: minecraft_image_name

    - name: Execute backup command on container
      ansible.builtin.shell:
        cmd: docker exec "{{minecraft_image_name.stdout}}" mc_send backup default

    - name: Pause for 30 seconds for backup to complete
      ansible.builtin.pause:
        seconds: 30

    - name: Find s3 image name
      ansible.builtin.shell:
        cmd: docker ps --format json | jq -r ".Names" | grep "{{ deployment.name }}_world_backup"
      register: s3_image_name

    - name: Execute backup command on container
      ansible.builtin.shell:
        cmd: docker exec "{{s3_image_name.stdout}}" ./backup-and-cleanup.sh

    - name: Stop minecraft server
      ansible.builtin.shell:
        cmd: docker exec "{{minecraft_image_name.stdout}}" mc_stop

    - name: Execute delete world files on minecraft container
      ansible.builtin.shell:
        cmd: docker exec "{{minecraft_image_name.stdout}}" rm -rf /minecraft/world

    - name: Execute delete world files on minecraft container
      ansible.builtin.shell:
        cmd: docker exec "{{minecraft_image_name.stdout}}" rm -rf /minecraft/world_nether

    - name: Execute delete world files on minecraft container
      ansible.builtin.shell:
        cmd: docker exec "{{minecraft_image_name.stdout}}" rm -rf /minecraft/world_end

    - name: Return to default context
      ansible.builtin.shell:
        cmd: docker context use default

    - name: Scale down minecraft service
      ansible.builtin.shell:
        cmd: docker service scale {{ deployment.name }}_minecraft_spigot_vanilla=0

    - name: Pause for 10 seconds for scaling to complete
      ansible.builtin.pause:
        seconds: 10

    - name: Scale up minecraft service
      ansible.builtin.shell:
        cmd: docker service scale {{ deployment.name }}_minecraft_spigot_vanilla=1
