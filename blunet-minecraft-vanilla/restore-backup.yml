---
- name: Restore backup for blunet-minecraft-vanilla
  hosts: manager
  remote_user: pi
  vars:
    compute_context_name: lovelace
    minecraft_service_name: blunet-minecraft-vanilla_minecraft-spigot-vanilla
    minecraft_container_search_name: blunet-minecraft-vanilla_minecraft-spigot-vanilla
    s3_container_search_name: blunet-minecraft-vanilla_world-backup
    minecraft_container_volume_name: blunet-minecraft-vanilla_minecraft
  vars_prompt:
    - name: backup_name
      prompt: Backup name to restore

  tasks:
    - name: Check for compute node context
      ansible.builtin.shell:
        cmd: if [[ -z $(docker context ls | awk '{print $1}' | grep "{{ compute_context_name }}") ]]; then echo true; else echo false; fi
      register: context_missing

    - name: Create missing docker context
      ansible.builtin.shell:
        cmd: docker context create {{ compute_context_name }} --description "{{ compute_context_name }}" --docker "host=ssh://kevin@{{ compute_context_name }}"
      when: context_missing == "true"

    - name: Scale down minecraft service
      ansible.builtin.shell:
        cmd: docker service scale {{ minecraft_service_name }}=0
    
    - name: Use new context
      command: docker context use {{ compute_context_name }}

    - name: Find s3 image name
      ansible.builtin.shell:
        cmd: docker ps --format json | jq -r ".Names" | grep "{{ s3_container_search_name }}"
      register: s3_image_name

    - name: Execute backup command on container
      ansible.builtin.shell:
        cmd: docker exec "{{s3_image_name.stdout}}" ./restore-backup.sh {{ backup_name }}

    - name: Return to default context
      ansible.builtin.shell:
        cmd: docker context use default

    - name: Scale up minecraft service
      ansible.builtin.shell:
        cmd: docker service scale {{ minecraft_service_name }}=1